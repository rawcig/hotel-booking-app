// test-auth-debug.ts\n// Debug script to test authentication issues\n\nimport { supabase } from '@/lib/supabase';\nimport { authService } from '@/api/services/auth';\n\nasync function testAuthDebug() {\n  console.log('=== Authentication Debug Test ===');\n  \n  // Test data\n  const testData = {\n    name: 'test',\n    email: 'test@example.com',\n    password: '123',\n    confirmPassword: '123'\n  };\n  \n  console.log('Test data:', testData);\n  \n  try {\n    console.log('Attempting direct Supabase signup...');\n    \n    // First try direct Supabase call with padded password\n    const paddedPassword = testData.password.padEnd(6, '1');\n    console.log('Padded password:', paddedPassword);\n    \n    const { data: authData, error: authError } = await supabase.auth.signUp({\n      email: testData.email,\n      password: paddedPassword,\n    });\n    \n    console.log('Supabase response:', { authData, authError });\n    \n    if (authError) {\n      console.error('Direct Supabase signup failed:', authError);\n    } else {\n      console.log('Direct Supabase signup successful:', authData);\n    }\n    \n  } catch (error) {\n    console.error('Error in direct Supabase test:', error);\n  }\n  \n  try {\n    console.log('\\nAttempting authService signup...');\n    \n    const result = await authService.signup({\n      name: testData.name,\n      email: testData.email,\n      password: testData.password\n    });\n    \n    console.log('AuthService signup result:', result);\n    \n  } catch (error: any) {\n    console.error('AuthService signup failed:', error);\n    console.error('Error name:', error.name);\n    console.error('Error message:', error.message);\n    console.error('Error stack:', error.stack);\n  }\n}\n\n// Run the test\ntestAuthDebug().catch(console.error);